package com.unisys.aos.view.viewentity.entity.reference;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.unisys.aos.view.common.util.ThreadLocalDateUtil;
import com.unisys.aos.view.viewentity.config.ReferenceProperties;
import org.springframework.data.annotation.Transient;

import javax.annotation.Generated;
import javax.annotation.Resource;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.Objects;

/**
 * The <b>RdmsStand</b> class is a POJO entity that represents the Stand Code
 * for reference data in message.
 * It is automatically generated by MyBatisGenerator.
 * The reference data in message definition can be referred to the section 3 of
 * the document SIS_AODB_RMS.doc.
 *
 * @author Zhang Wenqiang
 * @since 2020/10/21 23:50
 */
public class RdmsStand implements Serializable {
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private static final long serialVersionUID = 1L;
    @Transient
    public Date inspire;
    @Transient
    public Date expire;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private Long id;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private String standCode;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private String description;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private String localDescription;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private String allocateBigAircraft;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private String standGroupCode;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private BigDecimal width;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private BigDecimal length;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private String terminalCode;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private Byte attacheMaxAirbridge;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private String internationalGate;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private String domesticGate;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private String standType;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private Boolean fixedElectric;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private Long inspireTime;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private Long expireTime;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private Date createTime;
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    private Date updateTime;
    @Resource
    @Transient
    private ReferenceProperties referenceProperties;

    public Date getInspire() {
        if (null == inspireTime) {
            inspire = ThreadLocalDateUtil.timestampToDate(referenceProperties.getDefaultInspireTime());
        } else {
            inspire = ThreadLocalDateUtil.timestampToDate(inspireTime);
        }
        return inspire;
    }

    public Date getExpire() {
        if (null == expireTime) {
            expire = ThreadLocalDateUtil.timestampToDate(referenceProperties.getDefaultExpireTime());
        } else {
            expire = ThreadLocalDateUtil.timestampToDate(expireTime);
        }
        return expire;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public Long getId() {
        return id;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setId(Long id) {
        this.id = id;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String getStandCode() {
        return standCode;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setStandCode(String standCode) {
        this.standCode = standCode == null ? null : standCode.trim();
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String getDescription() {
        return description;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setDescription(String description) {
        this.description = description == null ? null : description.trim();
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String getLocalDescription() {
        return localDescription;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setLocalDescription(String localDescription) {
        this.localDescription = localDescription == null ? null : localDescription.trim();
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String getAllocateBigAircraft() {
        return allocateBigAircraft;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setAllocateBigAircraft(String allocateBigAircraft) {
        this.allocateBigAircraft = allocateBigAircraft == null ? null : allocateBigAircraft.trim();
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String getStandGroupCode() {
        return standGroupCode;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setStandGroupCode(String standGroupCode) {
        this.standGroupCode = standGroupCode == null ? null : standGroupCode.trim();
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public BigDecimal getWidth() {
        return width;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setWidth(BigDecimal width) {
        this.width = width;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public BigDecimal getLength() {
        return length;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setLength(BigDecimal length) {
        this.length = length;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String getTerminalCode() {
        return terminalCode;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setTerminalCode(String terminalCode) {
        this.terminalCode = terminalCode == null ? null : terminalCode.trim();
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public Byte getAttacheMaxAirbridge() {
        return attacheMaxAirbridge;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setAttacheMaxAirbridge(Byte attacheMaxAirbridge) {
        this.attacheMaxAirbridge = attacheMaxAirbridge;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String getInternationalGate() {
        return internationalGate;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setInternationalGate(String internationalGate) {
        this.internationalGate = internationalGate == null ? null : internationalGate.trim();
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String getDomesticGate() {
        return domesticGate;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setDomesticGate(String domesticGate) {
        this.domesticGate = domesticGate == null ? null : domesticGate.trim();
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String getStandType() {
        return standType;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setStandType(String standType) {
        this.standType = standType == null ? null : standType.trim();
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public Boolean getFixedElectric() {
        return fixedElectric;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setFixedElectric(Boolean fixedElectric) {
        this.fixedElectric = fixedElectric;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public Long getInspireTime() {
        return inspireTime;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setInspireTime(Long inspireTime) {
        this.inspireTime = inspireTime;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public Long getExpireTime() {
        return expireTime;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setExpireTime(Long expireTime) {
        this.expireTime = expireTime;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public Date getCreateTime() {
        return createTime;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public Date getUpdateTime() {
        return updateTime;
    }

    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    @Override
    @Generated("org.mybatis.generator.api.MyBatisGenerator")
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", standCode=").append(standCode);
        sb.append(", description=").append(description);
        sb.append(", localDescription=").append(localDescription);
        sb.append(", allocateBigAircraft=").append(allocateBigAircraft);
        sb.append(", standGroupCode=").append(standGroupCode);
        sb.append(", width=").append(width);
        sb.append(", length=").append(length);
        sb.append(", terminalCode=").append(terminalCode);
        sb.append(", attacheMaxAirbridge=").append(attacheMaxAirbridge);
        sb.append(", internationalGate=").append(internationalGate);
        sb.append(", domesticGate=").append(domesticGate);
        sb.append(", standType=").append(standType);
        sb.append(", fixedElectric=").append(fixedElectric);
        sb.append(", inspireTime=").append(inspireTime);
        sb.append(", expireTime=").append(expireTime);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateTime=").append(updateTime);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof RdmsStand)) return false;
        RdmsStand rdmsStand = (RdmsStand) o;
        return Objects.equals(getStandCode(), rdmsStand.getStandCode()) &&
                Objects.equals(getDescription(), rdmsStand.getDescription()) &&
                Objects.equals(getLocalDescription(), rdmsStand.getLocalDescription()) &&
                Objects.equals(getAllocateBigAircraft(), rdmsStand.getAllocateBigAircraft()) &&
                Objects.equals(getStandGroupCode(), rdmsStand.getStandGroupCode()) &&
                Objects.equals(getWidth(), rdmsStand.getWidth()) &&
                Objects.equals(getLength(), rdmsStand.getLength()) &&
                Objects.equals(getTerminalCode(), rdmsStand.getTerminalCode()) &&
                Objects.equals(getAttacheMaxAirbridge(), rdmsStand.getAttacheMaxAirbridge()) &&
                Objects.equals(getInternationalGate(), rdmsStand.getInternationalGate()) &&
                Objects.equals(getDomesticGate(), rdmsStand.getDomesticGate()) &&
                Objects.equals(getStandType(), rdmsStand.getStandType()) &&
                Objects.equals(getFixedElectric(), rdmsStand.getFixedElectric()) &&
                Objects.equals(getInspireTime(), rdmsStand.getInspireTime()) &&
                Objects.equals(getExpireTime(), rdmsStand.getExpireTime());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getStandCode(), getDescription(), getLocalDescription(), getAllocateBigAircraft(), getStandGroupCode(), getWidth(), getLength(), getTerminalCode(), getAttacheMaxAirbridge(), getInternationalGate(), getDomesticGate(), getStandType(), getFixedElectric(), getInspireTime(), getExpireTime());
    }


    /***
     * Get the identity of entity.
     * @return identity of entity
     */
    @JsonIgnore
    public String getIdentity() {
        return standCode + inspireTime + expireTime;
    }
}